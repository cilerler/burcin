name: Burcin.Templates.CSharp

on:
  push:
    branches:
    - master
  # - 'releases/**'
  # - '!releases/**-alpha'
    paths:
    - '.github/workflows/Burcin.Templates.CSharp.yml'
    - 'dist/**'
    # - '!test/**'
    # - '!docs/**'
    # - '!tools/**'
    # - '**/*.md'

jobs:

  Primitives:

    runs-on: windows-latest

    env:
      #solution: '**/*.sln'
      #buildPlatform: 'Any CPU'
      #buildConfiguration: 'Release'
      buildNumber: '0.0.0'
      projectFile: './src/*/*.csproj'
      projectTestFile: './test/*.Tests/*.Tests.csproj'
      nuspecFile: '.\burcin.nuspec'

    steps:
    - uses: actions/checkout@v1
      with:
        ref: master

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.100

    # - name: Display the path
    #   shell: pwsh
    #   run: |
    #     Get-Location
    #     echo ${env:PATH} and ${{secrets.NUGET_API_KEY}} and ${env:solution} and ${buildNumber}

    - name: Setup Nuget
      uses: warrenbuckley/Setup-Nuget@v1

    - name: Set the build number
      run: |
        FOR /F "tokens=*" %%g IN ('git rev-list --count HEAD') do (SET buildNumber=1.1.%%g)
        echo ::set-env name=buildNumber::%buildNumber%

    - name: Pack
      run: nuget pack %nuspecFile% -NonInteractive -OutputDirectory .\artifacts\NuGetPackages -Verbosity Detailed -version %buildNumber%
    #   run: dotnet pack -p:NuspecFile=<path to nuspec file> -p:NuspecProperties=<> -p:NuspecBasePath=<Base path>
    # # waiting for https://github.com/NuGet/Home/issues/4254

    - name: Tag
      shell: pwsh
      run: |
        git tag ${env:buildNumber}
        $authorizationToken = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("no-username:${{ secrets.GITHUB_TOKEN }}"))
        git -c http.extraheader="AUTHORIZATION: basic $authorizationToken" push origin ${env:buildNumber}

    # - name: Set GitHub Release Environment Variables
    #   run: |
    #     echo ::set-env name=RELEASE_TAG::%buildNumber%
    #     echo ::set-env name=RELEASE_NAME::%GITHUB_WORKFLOW%
    # - name: GitHub Release
    #   uses: meeDamian/github-release@v1.0.1
    #   with:
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     gzip: folders
    #     allow_override: true
    #     prerelease: false
    #     files: ./artifacts/NuGetPackages/*.nupkg
    ## waiting for https://github.com/meeDamian/github-release/issues/9

    # - name: GitHub Packages Source
    #   run: |
    #     nuget sources add -name "GitHub" -Source https://nuget.pkg.github.com/cilerler/index.json -Username cilerler -Password %nugetApiKey%
    #     nuget setapikey %nugetApiKey% -source "GitHub"
    #   env:
    #     nugetApiKey: ${{secrets.GITHUB_TOKEN}}
    # - name: GitHub Packages
    #   run: nuget push .\artifacts\NuGetPackages\*.nupkg -Source "GitHub"
    # ---
    #   run: dotnet nuget push .\artifacts\NuGetPackages\*.nupkg -k %nugetApiKey% -s https://nuget.pkg.github.com/cilerler/index.json
    #   env:
    #     nugetApiKey: ${{secrets.GITHUB_TOKEN}}
    ## waiting for https://github.com/NuGet/Home/issues/8580

    - name: Nuget
      run: dotnet nuget push .\artifacts\NuGetPackages\*.nupkg -k %nugetApiKey% -s https://api.nuget.org/v3/index.json
      env:
        nugetApiKey: ${{secrets.NUGET_API_KEY}}
