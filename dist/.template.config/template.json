{
	"$schema": "http://json.schemastore.org/template",
	"author": "Cengiz Ilerler",
	"classifications": ["Web", "Blazor"],
	"identity": "Burcin.BoilerPlate.CSharp",
	"name": "Burcin BoilerPlate",
	"shortName": "burcin",
	"tags": {
		"language": "C#",
		"type": "project"
	},
	"groupIdentity": "Burcin.Templates",
	"sourceName": "Burcin",
	"preferNameDirectory": true,
	"guids": ["412f3e04-fa62-4566-8e71-3fe15dc33c1c"],
	"PrimaryOutputs":
	[
		{
			"path": "src/Burcin.Data/_BurcinDatabaseDbContext.cs"
		}
	],
	"symbols": {
		"Authors": {
			"type": "parameter",
			"datatype": "string",
			"defaultValue": "anonymous",
			"replaces": "(authors)"
		},
		"AuthorsXmlEncoded": {
			"type": "derived",
			"replaces": "(authors-xml-encoded)",
			"valueSource": "Authors",
			"valueTransform": "xmlEncode"
		},
		"RepositoryUrl": {
			"type": "parameter",
			"defaultValue": "https://github.com/cilerler/burcin",
			"replaces": "(repositoryUrl)"
		},
		"RepositoryUrlXmlEncoded": {
			"type": "derived",
			"replaces": "(repositoryUrl-xml-encoded)",
			"valueSource": "RepositoryUrl",
			"valueTransform": "xmlEncode"
		},
		"ConsoleApplication": {
			"type": "parameter",
			"dataType": "bool",
			"defaultValue": "false"
		},
		"WebApiApplication": {
			"type": "parameter",
			"dataType": "bool",
			"defaultValue": "false"
		},
		"BlazorApplication": {
			"type": "parameter",
			"dataType": "bool",
			"defaultValue": "false"
		},
		"DatabaseName": {
			"type": "parameter",
			"defaultValue": "WideWorldImporters",
			"replaces": "BurcinDatabase",
			"fileRename": "BurcinDatabase"
		},
		"EntityFramework": {
			"type": "parameter",
			"dataType": "bool",
			"defaultValue": "false"
		},
		"TestFramework": {
			"type": "parameter",
			"dataType": "bool",
			"defaultValue": "false"
		},
		"DocFx": {
			"type": "parameter",
			"dataType": "bool",
			"defaultValue": "false"
		},
		"DockerSupport": {
			"type": "parameter",
			"dataType": "bool",
			"defaultValue": "false"
		},
		"VsCodeDirectory": {
			"type": "parameter",
			"dataType": "bool",
			"defaultValue": "false"
		},
		"GitHubTemplates": {
			"type": "parameter",
			"dataType": "bool",
			"defaultValue": "false"
		},
		"HealthChecks": {
			"type": "parameter",
			"dataType": "bool",
			"defaultValue": "false"
		},
		"BackgroundService": {
			"type": "parameter",
			"dataType": "bool",
			"defaultValue": "false"
		},
		"WindowsService": {
			"type": "parameter",
			"dataType": "bool",
			"defaultValue": "false"
		},
		"Swagger": {
			"type": "parameter",
			"dataType": "bool",
			"defaultValue": "false"
		},
		"NugetSourceGitHub": {
			"type": "parameter",
			"dataType": "bool",
			"defaultValue": "false"
		},
		"NugetSourceAzureDevOps": {
			"type": "parameter",
			"dataType": "bool",
			"defaultValue": "false"
		},
		"NugetSourceExists": {
			"type": "computed",
			"value": "(NugetSourceGitHub == \"true\" || NugetSourceAzureDevOps == \"true\")"
		},
		"Cache": {
			"type": "parameter",
			"datatype": "choice",
			"choices": [
				{
					"choice": "Microsoft SQL Server"
				},
				{
					"choice": "Redis"
				},
				{
					"choice": "All",
					"description": "Support both cache providers"
				},
				{
					"choice": "None",
					"description": "No cache provider"
				}
			],
			"defaultValue": "None"
		},
		"CacheSqlServer": {
			"type": "computed",
			"value": "(Cache == \"Microsoft SQL Server\" || Cache == \"All\")"
		},
		"CacheRedis": {
			"type": "computed",
			"value": "(Cache == \"Redis\" || Cache == \"All\")"
		},
		"CacheExists": {
			"type": "computed",
			"value": "(CacheSqlServer == \"true\" || CacheRedis == \"true\")"
		},
		"ConsoleApplicationExists": {
			"type": "computed",
			"value": "(ConsoleApplication == \"true\" || WindowsService == \"true\")"
		},
		"WebApiApplicationExists": {
			"type": "computed",
			"value": "(WebApiApplication == \"true\" || BlazorApplication == \"true\" ||HealthChecks == \"true\" || Swagger == \"true\")"
		},
		"SkipRestore": {
			"type": "parameter",
			"datatype": "bool",
			"defaultValue": "false",
			"description": "Skip `dotnet restore`"
		}
	},
	"DockerId": {
		"type": "generated",
		"generator": "guid",
		"replaces": "412f3e04-fa62-4566-8e71-3fe15dc33c1c",
		"parameters": {
			"format": "D"
		}
	},
	"TemplateEditMode": {
		"type": "generated",
		"generator": "constant",
		"parameters": {
			"value": "false"
		}
	},
	"sources": [
		{
			"modifiers": [
				{
					"condition": "(!ConsoleApplicationExists)",
					"exclude": [
						"src/Burcin.Host/hostsettings.json"
					]
				},
				{
					"condition": "(!WebApiApplicationExists)",
					"exclude": [
						"src/Burcin.Host/Controllers/**/*",
						"src/Burcin.Host/Middlewares/**/*"
					]
				},
				{
					"condition": "(!BlazorApplication)",
					"exclude": [
						"src/Burcin.Host/wwwroot/**/*",
						"src/Burcin.Host/Shared/**/*",
						"src/Burcin.Host/Pages/**/*",
						"src/Burcin.Host/Data/**/*",
						"src/Burcin.Host/Common/**/*",
						"src/Burcin.Host/_Imports.razor",
						"src/Burcin.Host/App.razor"
					]
				},
				{
					"condition": "(!EntityFramework)",
					"exclude": [
						"tools/EntityFramework/**/*",
						"src/Burcin.Host/DbContextFactory.cs",
						"src/Burcin.Domain/EntityFramework.targets",
						"src/Burcin.Host/EntityFramework.targets",
						"src/Burcin.Models/**/*",
						"src/Burcin.Data/**/*",
						"src/Burcin.Migrations/**/*"
					]
				},
				{
					"condition": "(!TestFramework)",
					"exclude": ["test/**/*"]
				},
				{
					"condition": "(!DocFx)",
					"exclude": ["docs/docfx/**/*"]
				},
				{
					"condition": "(!DockerSupport)",
					"exclude": [
						"docker-compose.dcproj",
						"docker-compose.yml",
						"docker-compose.override.yml",
						".dockerignore",
						"src/Burcin.Host/Dockerfile",
						".github/workflows/build_on_push_gke.yml",
						"tools/Kubernetes/**/*"
					]
				},
				{
					"condition": "(!BackgroundService)",
					"exclude": [
						"src/Burcin.Host/Services/**/*"
					]
				},
				{
					"condition": "(!WindowsService)",
					"exclude": [
						"tools/windows-service.ps1"
					]
				},
				{
					"condition": "(!HealthChecks)",
					"exclude": [
						"src/Burcin.Host/Controllers/HealthCheckController.cs",
						"src/Burcin.Host/HealthChecks/**/*"
					]
				},
				{
					"condition": "(!VsCodeDirectory)",
					"exclude": [".vscode/**/*"]
				},
				{
					"condition": "(!GitHubTemplates)",
					"exclude": [".github/**/*"]
				},
				{
					"condition": "(!CacheSqlServer)",
					"exclude": ["tools/sql-cache.ps1"]
				}
			]
		}
	],
	"postActions": [
		{
			"condition": "(!SkipRestore)",
			"description": "Restore NuGet packages required by this project.",
			"manualInstructions": [{ "text": "Run 'dotnet restore'" }],
			"actionId": "210D431B-A78B-4D2F-B762-4ED3E3EA9025",
			"continueOnError": true
		}
	],
	"SpecialCustomOperations": {
		"**/*.ps1": {
			"operations": [
				{
					"type": "conditional",
					"configuration": {
						"if": ["#--if"],
						"else": ["#--else"],
						"elseif": ["#--elseif", "#--elif"],
						"endif": ["#--endif"],
						"trim": "true",
						"wholeLine": "true"
					}
				}
			]
		},
		"**/*.yml": {
			"operations": [
				{
					"type": "conditional",
					"configuration": {
						"if": ["#--if"],
						"else": ["#--else"],
						"elseif": ["#--elseif", "#--elif"],
						"endif": ["#--endif"],
						"trim": "true",
						"wholeLine": "true"
					}
				}
			]
		},
		"**/*.md": {
			"operations": [
				{
					"type": "conditional",
					"configuration": {
						"if": ["<!--#if"],
						"else": ["<!--#else"],
						"elseif": ["<!--#elseif", "<!--#elif"],
						"endif": ["<!--#endif"],
						"trim": "true",
						"wholeLine": "true"
					}
				}
			]
		},
		"**/nuget.config": {
			"operations": [
				{
					"type": "conditional",
					"configuration": {
						"if": ["<!--#if"],
						"else": ["<!--#else"],
						"elseif": ["<!--#elseif", "<!--#elif"],
						"endif": ["<!--#endif"],
						"trim": "true",
						"wholeLine": "true"
					}
				}
			]
		}
	}
}
